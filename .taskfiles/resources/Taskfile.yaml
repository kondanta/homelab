version: '3'

tasks:
  create:kustomization:
    desc: Create a kustomization.yaml in a given directory with empty resources
    vars:
      DIR: '{{.DIR | default "."}}'
    cmds:
      - |
        file="{{.DIR}}/kustomization.yaml"
        if [ ! -f "$file" ]; then
          echo "Creating $file"
          cat <<EOF > "$file"
          ---
          # yaml-language-server: $schema=https://json.schemastore.org/kustomization
          apiVersion: kustomize.config.k8s.io/v1beta1
          kind: Kustomization
          resources: []
          EOF
        else
          echo "File already exists: $file"
        fi

  fix:kustomization:
    desc: Ensure a given kustomization.yaml file starts with '---' and schema line
    vars:
      FILE: '{{.FILE | default "./kustomization.yaml"}}'
    cmds:
      - |
        file="{{.FILE}}"
        if [ ! -f "$file" ]; then
          echo "Error: File does not exist: $file"
          exit 1
        fi

        line1=$(head -n 1 "$file")
        line2=$(head -n 2 "$file" | tail -n 1)
        expected_schema="# yaml-language-server: \$schema=https://json.schemastore.org/kustomization"
        needs_update=false

        if [ "$line1" != "---" ]; then
          needs_update=true
        fi
        if [ "$line2" != "$expected_schema" ]; then
          needs_update=true
        fi

        if [ "$needs_update" = true ]; then
          echo "Fixing $file"
          tail_start=1
          [ "$line1" = "---" ] && tail_start=2
          [ "$line2" = "$expected_schema" ] && tail_start=3

          tail -n +$tail_start "$file" > "$file.body"

          {
            echo "---"
            echo "$expected_schema"
            cat "$file.body"
          } > "$file.tmp" && mv "$file.tmp" "$file"

          rm -f "$file.body"
        else
          echo "$file is already correctly formatted"
        fi
