---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoria-metrics-k8s-stack
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      version: "0.58.2"
      sourceRef:
        kind: HelmRepository
        name: victoriametrics
        namespace: flux-system
  values:
    # Disable components we don't need yet to save resources
    vmalert:
      enabled: false
    vmalertmanager:
      enabled: false
    vmsingle:
      extraArgs:
        search.enableLabelAPI: "true"

      storage:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            storageClassName: longhorn
            resources:
              requests:
                storage: 10Gi

    vmagent:
      spec:
        # These two new blocks tell vmagent to look for monitors in ALL namespaces.
        # An empty selector {} means "no restrictions".
        serviceMonitorNamespaceSelector: {}
        podMonitorNamespaceSelector: {}

        # These selectors tell vmagent to use ALL monitors it finds within those namespaces.
        serviceMonitorSelector: {}
        podMonitorSelector: {}
    kube-state-metrics:
      enabled: true
    grafana:
      enabled: false

    defaultDashboards:
      enabled: true
      labels:
        key: value
      annotations:
        key: value

    kubeStateMetrics:
      enabled: true
      customResourceState:
        enabled: true
        config:
          spec:
            resources:
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1
                  kind: GitRepository
                metricNamePrefix: gotk
                labelsFromPath:
                  name: [metadata, name]
                  namespace: [metadata, namespace]
                  revision: [status, artifact, revision]
                metrics:
                  - name: resource_info
                    help: GitRepository info
                    type: Info
                  - name: resource_created
                    help: Creation timestamp
                    type: Gauge
                    valueFromPath: [metadata, creationTimestamp]
                  - name: resource_ready
                    help: Whether the resource is ready
                    type: Gauge
                    valueFrom: status.conditions["type=Ready"].status
